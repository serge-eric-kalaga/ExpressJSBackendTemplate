# version: '3'

services:
  express_api:
    container_name: express_api
    build: ./app
    restart: always
    volumes:
      - ./app:/app
      - /app/node_modules
    expose:
      - 5000
    ports:
      - "5000:5000"
    env_file:
      - ./app/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 15s
    depends_on:
      mysql_db:
        condition: service_healthy
    networks:
      - asgard
      - monitoring

  mysql_db:
    container_name: mysql_db
    image: mysql:9.2.0
    restart: always
    expose:
      - 3333
    ports:
      - 3333:3306
    env_file:
      - ./app/.env
    volumes:
      - ./data/mysql/src:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - asgard

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:5.2.2
    restart: always
    ports:
      - 8082:80
    env_file:
      - ./app/.env
    depends_on:
      - mysql_db
    networks:
      - asgard

  # ====> Monitoring <====

  prometheus:
    image: prom/prometheus
    user: root
    volumes:
      - ./data/prometheus:/prometheus
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    expose:
      - 9100
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    user: root
    ports:
      - "9200:3000"
    env_file:
      - ./app/.env
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring

networks:
  asgard:
  monitoring:
    driver: bridge
